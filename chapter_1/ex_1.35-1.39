*** Exercise 1.35:

phi^2 = phi + 1

Therefore dividing through by phi gives;

phi = 1 + 1/phi

==> phi is a fixed point of the mapping x --> 1 + 1/x


(define tolerance 0.00001)

(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess)
    (let ((next (f guess)))
      (if (close-enough? guess next)
          next
          (try next))))
  (try first-guess))

(define (compute-phi)
  (fixed-point (lambda (x) (+ 1 (/ 1 x))) 1.0))

returns a value for phi of 1.6180...


*** Exercise 1.36:

Find a solution to x^x = 1000

x --> log(1000)/log(x)

Without average damping:

(define tolerance 0.00001)

(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess)
    (display guess)
    (newline)
    (let ((next (f guess)))
      (if (close-enough? guess next)
          next
          (try next))))
  (try first-guess))

(define (compute-x)
  (fixed-point (lambda (x) (/ (log 1000) (log x))) 4.0))

==> 29 steps to compute x to the given tolerance.


Now with average damping:

x --> log(1000)/log(x)

x --> (1/2).(x + log(1000)/log(x))

(define (compute-x-damped)
  (fixed-point (lambda (x) (* 0.5 (+ x (/ (log 1000) (log x))))) 4.0))

==> 7 steps to compute x.


*** Exercise 1.37:


