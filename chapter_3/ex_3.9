*** Exercise 3.9:

Recursive version:

E1 --> [ n: 6 ] --> Global env.
       (if (= n 1)
           1
           (* n factorial (- n 1)))

E2 --> [ n: 5 ] --> Global env.
       (if (= n 1)
           1
           (* n factorial (- n 1)))

E3 --> [ n: 4 ] --> Global env.
       (if (= n 1)
           1
           (* n factorial (- n 1)))

E4 --> [ n: 3 ] --> Global env.
       (if (= n 1)
           1
           (* n factorial (- n 1)))

E5 --> [ n: 2 ] --> Global env.
       (if (= n 1)
           1
           (* n factorial (- n 1)))

E6 --> [ n: 1 ] --> Global env.
       (if (= n 1)
           1
           (* n factorial (- n 1)))

Iterative version:

E1 --> [ n: 6 ] --> Global env.
       (fact-iter 1 1 n)

E2 --> [ product: 1, counter: 1, max-count: 6 ] --> Global env.
       (if (> counter max-count)
           product
           (fact-iter (* counter product)
                      (+ counter 1)
                      max-count))

E3 --> [ product: 1, counter: 2, max-count: 6 ] --> Global env.
       (if (> counter max-count)
           product
           (fact-iter (* counter product)
                      (+ counter 1)
                      max-count))

E4 --> [ product: 2, counter: 3, max-count: 6 ] --> Global env.
       (if (> counter max-count)
           product
           (fact-iter (* counter product)
                      (+ counter 1)
                      max-count))

E5 --> [ product: 6, counter: 4, max-count: 6 ] --> Global env.
       (if (> counter max-count)
           product
           (fact-iter (* counter product)
                      (+ counter 1)
                      max-count))

E6 --> [ product: 24, counter: 5, max-count: 6 ] --> Global env.
       (if (> counter max-count)
           product
           (fact-iter (* counter product)
                      (+ counter 1)
                      max-count))

E7 --> [ product: 120, counter: 6, max-count: 6 ] --> Global env.
       (if (> counter max-count)
           product
           (fact-iter (* counter product)
                      (+ counter 1)
                      max-count))

E8 --> [ product: 720, counter: 7, max-count: 6 ] --> Global env.
       (if (> counter max-count)
           product
           (fact-iter (* counter product)
                      (+ counter 1)
                      max-count))
