#lang sicp

(define (make-table same-key?)
  (let ((local-table (list '*table*)))
    (define (lookup key-1 key-2)
      (let ((subtable (assoc key-1 (cdr local-table))))
        (if subtable
            (let ((record (assoc key-2 (cdr subtable))))
              (if record
                  (cdr record)
                  #f))
            #f)))
    (define (insert! key-1 key-2 value)
      (let ((subtable (assoc key-1 (cdr local-table))))
        (if subtable
            (let ((record (assoc key-2 (cdr subtable))))
              (if record
                  (set-cdr! record value)
                  (set-cdr! subtable
                            (cons (cons key-2 value)
                                  (cdr subtable)))))
            (set-cdr! local-table
                      (cons (list key-1
                                  (cons key-2 value))
                            (cdr local-table)))))
      'ok)
    (define (assoc key records)
      (cond ((null? records) false)
            ((same-key? key (caar records)) (car records))
            (else (assoc key (cdr records)))))
    (define (dispatch m)
      (cond ((eq? m 'lookup-proc) lookup)
            ((eq? m 'insert-proc!) insert!)
            (else (error "Unknown operation -- TABLE" m))))
    dispatch))

(define table-1 (make-table equal?))
(define get-1 (table-1 'lookup-proc))
(define put-1 (table-1 'insert-proc!))

(define (same-key? key-1 key-2)
  (if (< (abs (- key-2 key-1)) 0.5)
      #t
      #f))
(define table-2 (make-table same-key?))
(define get-2 (table-2 'lookup-proc))
(define put-2 (table-2 'insert-proc!))

;; Test
(newline)
(display "Standard table: ")
(newline)
(display "Insert b 98: ")
(put-1 'letters 'b 98)
(newline)
(display "Insert a 97: ")
(put-1 'letters 'a 97)
(newline)
(display "Insert * 42: ")
(put-1 'math '* 42)
(newline)
(display "Insert - 45: ")
(put-1 'math '- 45)
(newline)
(display "Insert + 43: ")
(put-1 'math '+ 43)
(newline)
(display "Get -: ")
(display (get-1 'math '-))
(newline)
(newline)
(display "Table with new key equality method:")
(newline)
(display "Insert 90.0 1.1 cat: ")
(put-2 90.0 1.1 'cat)
(newline)
(display "Insert 90.1 2.3 dog: ")
(put-2 90.1 2.3 'dog)
(newline)
(display "Insert 72.1 0.3 carrot: ")
(put-2 72.1 0.3 'carrot)
(newline)
(display "Insert 69.9 3.4 pumpkin: ")
(put-2 69.9 3.4 'pumpkin)
(newline)
(display "Get 89.7 2.6: ")
(get-2 89.7 2.6)
(newline)
